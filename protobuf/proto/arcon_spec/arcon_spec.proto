// Initial start of Protobuf version of Arcon Specification

syntax = "proto3";

option java_package = "se.kth.arcon.spec";

package arcon_spec;

message ArconSpec {
  string id = 1;
  oneof mode {
    DebugMode debug = 2;
    ReleaseMode release = 3;
  }
  repeated string features = 4;
  string target = 5;
  repeated Node nodes = 6;
  string system = 7;
}

message Node {
  uint32 id = 1;
  uint32 parallelism = 2;
  oneof node_kind {
    Window window = 3;
    Source source = 4;
    Sink sink = 5;
  }
}

message Window {
  ArconType input_type = 1;
  ArconType output_type = 2;
  ChannelStrategy channel_strategy = 3;
  repeated ChannelKind successors = 4;
  uint32 predecessor = 5;
  oneof assigner {
    TumblingWindow tumbling = 6;
    SlidingWindow sliding = 7;
  }
  bool keyed = 8;
  oneof function {
    AppenderWindow appender_window = 9;
    IncrementalWindow incremental_window = 10;
  }
  oneof time_kind {
    EventTime event_time = 11;
    ProcessingTime processing_time = 12;
    IngestionTime ingestion_time = 13;
  }
}

message AppenderWindow {
  string udf = 3;
}
message IncrementalWindow {
  string udf = 3;
  string agg_udf = 4;
}

message Source {
  ArconType source_type = 1;
  ChannelStrategy channel_strategy = 2;
  repeated ChannelKind successors = 3;
  oneof source_kind {
    Socket socket = 4;
    LocalFile local_file = 5;
  }
  Format format = 6;
  uint64 source_rate = 7;
}


message Sink {
  ArconType sink_type = 1;
  uint32 predecessor = 2;
  oneof sink_kind {
    Socket socket = 3;
    LocalFile local_file = 4;
    DebugNode debug = 5;
  }
  Format format = 6;
}

message Operator {
  ArconType input_type = 1;
  ArconType output_type = 2;
  string udf = 3;
  uint32 predecessor = 4;
  ChannelStrategy channel_strategy = 5;
  repeated ChannelKind successors = 6;
  OperatorKind kind = 7;
}

message DebugMode {}
message ReleaseMode {}

enum OperatorKind {
  FlatMap = 0;
  Filter = 1;
  Map = 2;
}

message TumblingWindow {
  uint64 length = 1;
}

message SlidingWindow {
  uint64 length = 1;
  uint64 slide = 2;
}

message EventTime { 
  uint64 slack = 1;
}
message ProcessingTime {}
message IngestionTime {}


message DebugNode {}

message Socket {
  string addr = 1;
  string protocol = 2;
}

message LocalFile {
  string path = 1;
}

enum ChannelStrategy {
  Forward = 0;
  Broadcast  = 1;
  RoundRobin = 2;
  RandomShuffle = 3;
  KeyBy = 4;
}

message ChannelKind {
  oneof channel_kind {
    LocalChannel local_channel = 1;
    RemoteChannel remote_channel = 2;
  }
}

message LocalChannel {
  string id = 1;
}

message RemoteChannel {
  string id = 1;
  string addr = 2;
}

message ArconType {
  oneof types {
    Scalar scalar = 1;
    Struct struct = 2;
    ArconVec vec = 3;
    string str  = 4;
  }
}

message Struct {
  string id = 1;
  uint32 key = 2;
  repeated ArconType field_tys = 3;
}

message ArconVec {
  ArconType arcon_type = 1;
}

message I32 {}
message I64 {}
message U32 {}
message U64 {}
message F32 {}
message F64 {}
message BOOL {}

message Scalar {
  oneof scalar {
    I32 i32 = 1;
    I64 i64 = 2;
    U32 u32 = 3;
    U64 u64 = 4;
    F32 f32 = 5;
    F64 f64 = 6;
    BOOL bool = 7;
  }
}

enum Format {
  CSV = 0;
  JSON  = 1;
  UTF8 = 2;
}
